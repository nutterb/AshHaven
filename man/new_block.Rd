% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new_block.R
\name{new_block}
\alias{new_block}
\alias{print.minecraft_block}
\title{Create New Minecraft Block}
\usage{
new_block(
  type = "none",
  is_farm = FALSE,
  growth_probability = 0,
  current_growth_stage = 0,
  max_growth_stage = 1
)

\method{print}{minecraft_block}(x, ...)
}
\arguments{
\item{type}{\code{character(1)}. Label for the type of block.}

\item{is_farm}{\code{logical(1)}. Indicates if the block is being monitored
as part of a farm.}

\item{growth_probability}{\code{numeric(1)} on the interval of (0, 1). The
probability the crop advances a growth stage when it is assigned
a random tick.}

\item{current_growth_stage}{\code{integerish(1)}. Non-negative value storing
the growth stage of the crop.}

\item{max_growth_stage}{\code{integerish(1)}. Non-negative value storing
the growth stage at which the crop reaches maturity.}
}
\value{
Returns an object of class \code{minecraft_block} with the following
methods.
\itemize{
\item \code{get_type()}: Returns the type attribute.
\item \code{set_type(new_type)}: Sets the type attribute. \code{new_type} must be \code{character(1)}.
\item \code{is_farm()}: Returns the status of the block as part of the farm.
\item \code{set_farm(state)}: Sets the \code{is_farm} property of the block. \code{state} must be \code{logical(1)}
\item \code{grow_prob()}: Returns the growth probability of the crop.
\item \code{set_grow_prob(p)}: Sets the growth probability. \code{p} must be \code{numeric(1)} on the interval (0, 1)
\item \code{growth_stage()}: Returns the current growth stage of the block.
\item \code{set_growth_stage(gs)}: Sets the growth stage to the value of \code{gs}. \code{gs} must be \code{integerish(1)} and non-negative.
\item \code{advance_growth_stage(i)}: Adds the value of \code{i} to the current growth stage
\item \code{max_growth_stage()}: Returns the maximum growth stage of the crop.
\item \code{set_max_growth_stage(max)}: Sets the maximum growth stage of the crop. \code{max} must be \code{integerish(1)} and non-negative.
\item \code{is_mature()}: Returns a \code{logical} indicating if the crop has reached maturity.
\item \code{assign_random_tick()}: Attempts to advance the growth stage of the crop with a probabilty of success equal to \code{growth_probability}.
\item \code{random_tick_count()}: Returns the number of times the block has been assigned a random tick.
\item \code{just_grew()}: Returns a \code{logical}. Used for convenience of data collection. Subchunk tick functions will set this property and use it to count how many randomly ticked chunks grew.
\item \code{set_just_grew(state)}: Used to set the value of the \code{just_grew} property. \code{state} must be a \code{logical(1)}.
}
}
\description{
Farmable blocks may have multiple growth stages before
reaching maturity. This object type provides methods for
monitoring growth stages, maturity, and advancing toward maturity
when assigned a random tick.
}
